name: CI/CD

on:
  push:
    branches: [ "backend/develop" ]
  pull_request:
    branches: [ "backend/develop" ]

permissions:
  contents: read

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build
  deploy:
    deploy:
      runs-on: self-hosted

      steps:
        - name: change permission
          run: |
            sudo chown -R ubuntu:ubuntu /home/ubuntu/actions-runner/_work/cicdtest

        - uses: actions/checkout@v3
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: gradle bootjar
          run: |
            chmod +x ./gradlew
            ./gradlew bootjar

#        - name: kill 80 port if exist
#          run: |
#            if sudo lsof -i :80; then
#            echo "Port 80 is already in use. Killing the process..."
#            sudo lsof -i :80 | awk 'NR!=1 {print $2}' | sudo xargs kill -9
#            fi

        - name: docker build
          run: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker build -t app .
            docker tag app ${{ secrets.DOCKERHUB_USERNAME }}/my-ubuntu:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-ubuntu:latest

        - name: deploy
#          uses: appleboy/ssh-action@master
          with:
            # 도커 작업
            script: |
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-ubuntu:latest
              docker stop $(docker ps -a -q)
              docker run -d --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/my-ubuntu:latest
              docker rm $(docker ps --filter 'status=exited' -a -q)
              docker image prune -a -f
